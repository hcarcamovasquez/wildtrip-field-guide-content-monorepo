---
import { getConservationStatus } from '../../../lib/utils/conservation-status'
import { getMainGroupLabel } from '../../../lib/utils/species-groups'
import type { PublicSpecie } from '../../../lib/public/repositories'
import ResponsiveImage from '../ResponsiveImage.astro'
import ChevronRight from '../icons/ChevronRight.astro'

export interface Props {
  specie: PublicSpecie
}

const { specie: sp } = Astro.props
const conservationStatus = sp.conservationStatus ? getConservationStatus(sp.conservationStatus) : null
const mainGroupLabel = sp.mainGroup ? getMainGroupLabel(sp.mainGroup) : null
---

<div class="card-container relative h-[320px]">
  <div class="card-flipper transform-style-preserve-3d relative h-full w-full">
    <!-- Front of card -->
    <a
      href={`/content/species/${sp.slug}`}
      class="card-front absolute inset-0 block h-full w-full overflow-hidden rounded-2xl bg-white shadow-md transition-shadow duration-300 backface-hidden dark:bg-gray-800"
    >
      <div class="relative h-full w-full">
        <div class="h-full w-full overflow-hidden bg-gray-100 dark:bg-gray-700">
          {
            sp.mainImageUrl ? (
              <ResponsiveImage
                src={sp.mainImageUrl}
                alt={sp.commonName}
                class="h-full w-full object-cover"
                sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
                loading="lazy"
                variant="medium"
              />
            ) : (
              <div class="flex h-full w-full items-center justify-center">
                <svg
                  class="h-16 w-16 text-gray-300 dark:text-gray-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="1.5"
                    d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                  />
                </svg>
              </div>
            )
          }
        </div>

        <!-- Text overlay -->
        <div class="absolute right-0 bottom-0 left-0 bg-gradient-to-t from-black/80 via-black/60 to-transparent p-4">
          <h3 class="mb-1 text-base font-bold text-white md:text-lg">
            {sp.commonName}
          </h3>
          <p class="text-sm text-gray-200 italic">
            {sp.scientificName}
          </p>
        </div>

        {
          conservationStatus && (
            <div class="absolute top-3 right-3">
              <span
                class={`inline-flex items-center rounded-lg px-2.5 py-1 text-xs font-bold shadow-lg ${conservationStatus.bgClass} ${conservationStatus.textClass} `}
              >
                {conservationStatus.emoji} {conservationStatus.label}
              </span>
            </div>
          )
        }

        {
          mainGroupLabel && (
            <div class="absolute top-3 left-3">
              <span class="inline-flex items-center rounded-lg bg-gray-900/80 px-2.5 py-1 text-xs font-medium text-white shadow-lg backdrop-blur-sm">
                {mainGroupLabel}
              </span>
            </div>
          )
        }
      </div>
    </a>

    <!-- Back of card -->
    <a
      href={`/content/species/${sp.slug}`}
      class="card-back absolute inset-0 flex flex-col justify-between overflow-hidden rounded-2xl bg-gradient-to-br from-primary to-primary/80 p-6 text-white shadow-lg transition-shadow duration-300 backface-hidden"
    >
      <div>
        <h3 class="mb-3 text-xl font-bold">{sp.commonName}</h3>
        <p class="mb-4 text-sm italic opacity-90">{sp.scientificName}</p>
        {
          sp.description ? (
            <p class="line-clamp-6 text-sm leading-relaxed">{sp.description}</p>
          ) : (
            <p class="text-sm italic opacity-75">No hay descripción disponible para esta especie.</p>
          )
        }
      </div>
      <div class="mt-4 flex items-center justify-between">
        <span class="text-sm font-medium opacity-90">Ver más detalles</span>
        <ChevronRight class="h-5 w-5" />
      </div>
    </a>
  </div>
</div>

<style>
  .line-clamp-6 {
    display: -webkit-box;
    -webkit-line-clamp: 6;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .card-container {
    perspective: 1200px;
    width: 100%;
  }

  .card-flipper {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 1.2s cubic-bezier(0.4, 0, 0.2, 1);
    transform-style: preserve-3d;
  }

  /* Disable hover effect on touch devices */
  @media (hover: hover) and (pointer: fine) {
    .card-container:hover {
      transform: scale(1.02);
    }

    .card-container:hover .card-flipper {
      transform: rotateY(180deg);
      transition-duration: 0.8s;
      transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }
  }

  /* Ensure no hover effects on mobile */
  @media (max-width: calc(var(--breakpoint-md) - 1px)) {
    .card-container:hover {
      transform: none;
    }

    .card-container:hover .card-flipper {
      transform: none;
    }
  }

  .card-front,
  .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /* Shadow effects only on desktop */
  @media (min-width: var(--breakpoint-md)) {
    .card-container:hover .card-front {
      box-shadow:
        0 10px 25px -5px rgba(0, 0, 0, 0.1),
        0 8px 10px -6px rgba(0, 0, 0, 0.1);
    }

    .card-container:hover .card-back {
      box-shadow:
        0 10px 25px -5px rgba(0, 0, 0, 0.2),
        0 8px 10px -6px rgba(0, 0, 0, 0.1);
    }
  }

  .card-back {
    transform: rotateY(180deg);
  }

  .transform-style-preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }
</style>
