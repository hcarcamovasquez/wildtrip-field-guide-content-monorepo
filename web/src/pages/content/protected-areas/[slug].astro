---
import Footer from '../../../components/Footer.astro'
import Header from '../../../components/Header.astro'
import ProtectedAreaEcosystems from '../../../components/protected-area/ProtectedAreaEcosystems.astro'
import ProtectedAreaGallery from '../../../components/protected-area/ProtectedAreaGallery.astro'
import ProtectedAreaHeader from '../../../components/protected-area/ProtectedAreaHeader.astro'
import ProtectedAreaHero from '../../../components/protected-area/ProtectedAreaHero.astro'
import ProtectedAreaInfo from '../../../components/protected-area/ProtectedAreaInfo.astro'
import ProtectedAreaLocation from '../../../components/protected-area/ProtectedAreaLocation.astro'
import Layout from '../../../layouts/Layout.astro'
import { protectedAreasRepository } from '../../../lib/repositories'
import { renderContentBlock } from '../../../lib/utils/render-content'

const { slug } = Astro.params

if (!slug) {
  return Astro.redirect('/404')
}

// Fetch protected area data with base content
const areaData = await protectedAreasRepository.findBySlug(slug)

if (!areaData) {
  return Astro.redirect('/404')
}
---

<Layout title={areaData.name} description={areaData.description}>
  <Header slot="header" />
  <Footer slot="footer" />
  <article class="mx-auto max-w-4xl bg-white px-4 py-8 sm:px-6 lg:px-8 dark:bg-gray-900">
    <ProtectedAreaHeader title={areaData.name} type={areaData.type} region={areaData.region} />

    <ProtectedAreaHero
      images={areaData.images || undefined}
      mainImageUrl={areaData.mainImageUrl}
      title={areaData.name}
    />

    {
      areaData.description && (
        <div class="mb-8">
          <p class="text-lg leading-relaxed text-gray-700 dark:text-gray-300">{areaData.description}</p>
        </div>
      )
    }

    <ProtectedAreaInfo
      region={areaData.region}
      area={areaData.area}
      creationYear={areaData.creationYear}
      type={areaData.type}
      visitorInformation={null}
    />

    <ProtectedAreaEcosystems ecosystems={areaData.ecosystems || undefined} />

    {
      areaData.richContent && areaData.richContent.blocks && areaData.richContent.blocks.length > 0 && (
        <section class="mb-8">
          <div class="prose prose-lg max-w-none dark:prose-invert">
            {areaData.richContent.blocks.map((block) => (
              <div set:html={renderContentBlock(block)} />
            ))}
          </div>
        </section>
      )
    }

    <ProtectedAreaGallery images={areaData.images || undefined} title={areaData.name} />

    <ProtectedAreaLocation location={areaData.location} />
  </article>
</Layout>
