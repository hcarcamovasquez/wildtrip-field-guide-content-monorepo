---
import ProtectedAreaEcosystems from '../../../../components/public/protected-area/ProtectedAreaEcosystems.astro'
import ProtectedAreaGallery from '../../../../components/public/protected-area/ProtectedAreaGallery.astro'
import ProtectedAreaHeader from '../../../../components/public/protected-area/ProtectedAreaHeader.astro'
import ProtectedAreaHero from '../../../../components/public/protected-area/ProtectedAreaHero.astro'
import ProtectedAreaInfo from '../../../../components/public/protected-area/ProtectedAreaInfo.astro'
import ProtectedAreaLocation from '../../../../components/public/protected-area/ProtectedAreaLocation.astro'
import Layout from '../../../../layouts/Layout.astro'
import { ManageProtectedAreaRepository } from '../../../../lib/private/repositories/ManageProtectedAreaRepository'
import { canAccessRoute, type Role } from '../../../../lib/utils/permissions'
import { renderContentBlock } from '../../../../lib/utils/render-content'

const { id } = Astro.params

if (!id || isNaN(parseInt(id))) {
  return Astro.redirect('/404')
}

// Check authentication for preview
const user = Astro.locals.user
if (!user || !canAccessRoute(user.role as Role, '/manage/protected-areas')) {
  return Astro.redirect('/sign-in')
}

const area = await ManageProtectedAreaRepository.findById(parseInt(id))

if (!area) {
  return Astro.redirect('/404')
}

// Check if there's content to preview
// Always allow preview for any existing content

// Get the preview data (either draft or published)
let previewData = area

// If there's a draft, merge the draft data
if (area.hasDraft && area.draftData) {
  const draftData = area.draftData as Record<string, unknown>
  previewData = {
    ...area,
    ...draftData,
  }
}

// Get image URLs from the new JSON structure
const images = previewData.galleryImages?.map((img) => img.url) || []
const mainImageUrl = previewData.mainImage?.url || null
---

<Layout title={previewData.name}>
  {/* Preview notice banner */}
  <div class="sticky top-0 z-50 bg-orange-500 text-white">
    <div class="mx-auto max-w-4xl px-4 py-2 sm:px-6 lg:px-8">
      <div class="flex items-center justify-center">
        <div class="flex items-center gap-2">
          <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
            ></path>
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
            ></path>
          </svg>
          <span class="text-sm font-medium">
            {
              area.hasDraft && area.status === 'published'
                ? 'Vista previa del borrador - Los cambios no son p√∫blicos hasta que se publiquen'
                : 'Vista previa'
            }
          </span>
        </div>
      </div>
    </div>
  </div>

  <article class="mx-auto max-w-4xl bg-white px-4 py-8 sm:px-6 lg:px-8 dark:bg-gray-900">
    <ProtectedAreaHeader title={previewData.name} type={previewData.type || undefined} region={previewData.region} />

    <ProtectedAreaHero images={images || undefined} mainImageUrl={mainImageUrl} title={previewData.name} />

    {
      previewData.description && (
        <div class="mb-8">
          <p class="text-lg leading-relaxed text-gray-700 dark:text-gray-300">{previewData.description}</p>
        </div>
      )
    }

    <ProtectedAreaInfo
      region={previewData.region}
      area={previewData.area || undefined}
      creationYear={previewData.creationYear || undefined}
      type={previewData.type || undefined}
      visitorInformation={previewData.visitorInformation}
    />

    <ProtectedAreaEcosystems ecosystems={previewData.ecosystems || undefined} />

    {
      previewData.richContent && previewData.richContent.blocks && previewData.richContent.blocks.length > 0 && (
        <section class="mb-8">
          <div class="prose prose-lg max-w-none dark:prose-invert">
            {previewData.richContent.blocks.map((block) => (
              <div set:html={renderContentBlock(block)} />
            ))}
          </div>
        </section>
      )
    }

    <ProtectedAreaGallery images={images || undefined} title={previewData.name} />

    <ProtectedAreaLocation location={previewData.location} />
  </article>
</Layout>
