---
import GalleryExplorer from '../../../components/manage/GalleryExplorer.tsx'
import PrivateHeader from '../../../components/manage/PrivateHeader.astro'
import Layout from '../../../layouts/Layout.astro'
import { ManageGalleryRepository } from '../../../lib/private/repositories/ManageGalleryRepository'
import { canAccessRoute, type Role } from '../../../lib/utils/permissions'

const user = Astro.locals.user
if (!user) {
  return Astro.redirect('/sign-in')
}

// Check permissions - gallery is accessible to all editors
if (!canAccessRoute(user.role as Role, Astro.url.pathname)) {
  return Astro.redirect('/unauthorized')
}

// Get folder ID from query params
const url = new URL(Astro.request.url)
const folderId = url.searchParams.get('folder')
const currentFolderId = folderId ? parseInt(folderId) : null

// Get storage stats
const stats = await ManageGalleryRepository.getStorageStats()

// Get current folder info and breadcrumb
let currentFolder = null
let breadcrumb: Awaited<ReturnType<typeof ManageGalleryRepository.getFolderPath>> = []
if (currentFolderId) {
  currentFolder = await ManageGalleryRepository.findFolderById(currentFolderId)
  if (currentFolder) {
    breadcrumb = await ManageGalleryRepository.getFolderPath(currentFolderId)
  }
}

// Get folders in current directory
const folders = await ManageGalleryRepository.findFoldersByParent(currentFolderId)

// Get media files in current folder
const { items: media, total: _total } = await ManageGalleryRepository.findMedia({
  folderId: currentFolderId,
  limit: 100,
})

// Prepare data for client component
const initialData = {
  currentFolder,
  breadcrumb,
  folders,
  media,
  stats,
  currentUser: {
    id: user.id.toString(),
    name: user.fullName || user.username || user.email,
    role: user.role,
  },
}
---

<Layout title="GalerÃ­a de Medios">
  <PrivateHeader slot="header" />
  <div class="h-[calc(100vh-112px)] overflow-hidden">
    <GalleryExplorer initialData={initialData} client:load />
  </div>
</Layout>
