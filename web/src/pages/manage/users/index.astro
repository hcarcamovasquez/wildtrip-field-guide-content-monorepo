---
import PrivateHeader from '../../../components/manage/PrivateHeader.astro'
import UsersTable from '../../../components/manage/UsersTable'
import Layout from '../../../layouts/Layout.astro'
import { ManageUserRepository } from '../../../lib/private/repositories/ManageUserRepository'
import { canAccessRoute, type Role } from '../../../lib/utils/permissions'

const user = Astro.locals.user
if (!user) {
  return Astro.redirect('/sign-in')
}

if (!canAccessRoute(user.role as Role, Astro.url.pathname)) {
  return Astro.redirect('/unauthorized')
}

const page = parseInt(Astro.url.searchParams.get('page') || '1')
const limit = 10
const search = Astro.url.searchParams.get('search') || ''
const roleFilter = Astro.url.searchParams.get('role') || ''

const { users, pagination } = await ManageUserRepository.findAll({
  page,
  limit,
  search,
  role: roleFilter || undefined,
  sortBy: 'createdAt',
  sortOrder: 'desc',
})

const searchParams = {
  search,
  role: roleFilter,
  page,
}
---

<Layout title="Gestión de Usuarios - Panel de Administración">
  <PrivateHeader slot="header" />
  <div class="h-[calc(100vh-112px)] overflow-hidden">
    <UsersTable
      client:load
      users={users}
      pagination={pagination}
      currentUserId={user.id}
      searchParams={searchParams}
      baseUrl="/manage/users"
    />
  </div>
</Layout>
